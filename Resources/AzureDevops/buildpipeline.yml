# .NET Standard
# Build, apply GitVersion to nuget package and run tests.

trigger:
  branches:
    include:
    - master
  paths:
    exclude:
    - ReadMe.md; .gitignore; /Resources/AzureDevops/buildpipeline.yml;

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:

- task: gitversion/setup@0
  displayName: "GitVersion setup"
  inputs:
    versionSpec: '5.x'

- task: gitversion/execute@0
  displayName: "GitVersion execute"

- task: NuGetCommand@2
  displayName: "Restore solution"
  inputs:
    command: 'restore'
    restoreSolution: '$(solution)'


- task: SonarCloudPrepare@1
  displayName: "Preparing Sonar Cloud Analysis"
  inputs:
    SonarCloud: 'Sonar Cloud GHS Database Pipeline'
    organization: 'tq'
    scannerMode: 'MSBuild'
    projectKey: 'GHS'
    projectName: 'GHS Database'

- task: VSBuild@1
  displayName: "Build"
  inputs:
    solution: '$(solution)'
    msbuildArgs: '/p:PackageLocation="$(Build.SourcesDirectory)\packages" /p:Version=$(GitVersion.NuGetVersion)'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: 'Install Report Generator tool'
  inputs:
    command: custom
    custom: tool
    arguments: 'install --global dotnet-reportgenerator-globaltool'


- task: VSTest@2
  displayName: "Test"
  inputs:
    testSelector: 'testAssemblies'
    testAssemblyVer2: |
      **\*test*.dll
      !**\*TestAdapter.dll
      !**\obj\**
    searchFolder: '$(System.DefaultWorkingDirectory)'
    codeCoverageEnabled: true

- task: SonarCloudAnalyze@1
  displayName: "Sonar Cloud Analysis"

- task: SonarCloudPublish@1
  displayName: "Sonar Cloud Publish Result"
  inputs:
    pollingTimeoutSec: '300'

- task: DotNetCoreCLI@2
  displayName: "Pack"
  inputs:
    command: 'pack'
    packagesToPack: '**\Techtoniq.GHSDatabase.csproj;!**\*.UnitTest.csproj'
    versioningScheme: 'byEnvVar'
    versionEnvVar: GitVersion.NuGetVersion

- task: NuGetCommand@2
  displayName: 'Deploy'
  inputs:
    command: 'push'
    packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg'
    nuGetFeedType: 'internal'
    publishVstsFeed: '79b13429-bc95-4429-80ee-3436bb9ed2f3'