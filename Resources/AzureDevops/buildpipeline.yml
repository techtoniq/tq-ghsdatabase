# .NET Standard
# Build, apply GitVersion to nuget package and run tests.

trigger:
  branches:
    include:
    - master
  paths:
    exclude:
    - ReadMe.md; .gitignore; \Resources\AzureDevops\buildpipeline.yml;

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:

- task: gitversion/setup@0
  displayName: "GitVersion setup"
  inputs:
    versionSpec: '5.x'

- task: gitversion/execute@0
  displayName: "GitVersion execute"
  inputs:
    useConfigFile: true
    configFilePath: '\Resources\AzureDevops\GitVersion.yml'

- task: NuGetToolInstaller@1
  displayName: "Install tools"


- task: NuGetCommand@2
  displayName: "Restore solution"
  inputs:
    command: 'restore'
    restoreSolution: '$(solution)'


- task: SonarCloudPrepare@1
  displayName: "Preparing Sonar Cloud Analysis"
  inputs:
    SonarCloud: 'Sonar Cloud GHS Database Pipeline'
    organization: 'tq'
    scannerMode: 'MSBuild'
    projectKey: 'GHS'
    projectName: 'GHS Database'

- task: VSBuild@1
  displayName: "Build"
  inputs:
    solution: '$(solution)'
    msbuildArgs: '/p:PackageLocation="$(Build.SourcesDirectory)\packages" /p:Version=$(GitVersion.NuGetVersion)'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: "Test"
  inputs:
    command: 'test'
    projects: '**\*.UnitTest.csproj'
    arguments: '--collect "Code coverage"'

- task: PublishTestResults@2
  displayName: "Publish test results"
  inputs:
    testResultsFormat: 'VSTest'
    testResultsFiles: '$(Agent.TempDirectory)\*.trx'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: SonarCloudAnalyze@1
  displayName: "SonarCloud - Analyze"

- task: SonarCloudPublish@1
  displayName: "Sonar Cloud - Publish Result"
  inputs:
    pollingTimeoutSec: '300'

- task: DotNetCoreCLI@2
  displayName: "Pack"
  inputs:
    command: 'pack'
    packagesToPack: '**\Techtoniq.GHSDatabase.csproj;'
    nobuild: true
    versioningScheme: 'byEnvVar'
    versionEnvVar: 'GitVersion.NuGetVersion'

- task: NuGetCommand@2
  displayName: "Push Nuget package to feed"
  inputs:
    command: 'push'
    packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg'
    nuGetFeedType: 'internal'
    publishVstsFeed: '992ccd33-8a37-4357-bbf0-45441e28d737'
    allowPackageConflicts: true