# .NET Standard
# Build, apply GitVersion to nuget package and run tests.

trigger:
  branches:
    include:
    - master
  paths:
    exclude:
    - ReadMe.md; .gitignore; /Resources/AzureDevops/buildpipeline.yml;

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:

- task: gitversion/setup@0
  displayName: "GitVersion setup"
  inputs:
    versionSpec: '5.x'

- task: gitversion/execute@0
  displayName: "GitVersion execute"

- task: NuGetCommand@2
  displayName: "Restore solution"
  inputs:
    command: 'restore'
    restoreSolution: '$(solution)'


- task: SonarCloudPrepare@1
  displayName: "Preparing Sonar Cloud Analysis"
  inputs:
    SonarCloud: 'Sonar Cloud GHS Database Pipeline'
    organization: 'tq'
    scannerMode: 'MSBuild'
    projectKey: 'GHS'
    projectName: 'GHS Database'

- task: VSBuild@1
  displayName: "Build"
  inputs:
    solution: '$(solution)'
    msbuildArgs: '/p:PackageLocation="$(Build.SourcesDirectory)\packages" /p:Version=$(GitVersion.NuGetVersion)'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: 'Install Report Generator tool'
  inputs:
    command: custom
    custom: tool
    arguments: 'install --global dotnet-reportgenerator-globaltool'


- task: DotNetCoreCLI@2
  displayName: 'Run unit tests on Tests - $(configuration)'
  inputs:
    command: test
    arguments: '--no-build /p:CollectCoverage=true /p:CoverletOutput=../TestResults/Coverage/'
    projects: '**/*UnitTest.csproj'
    configuration: $(configuration)

- script: |
    reportgenerator -reports:"$(Build.SourcesDirectory)/**/coverage.cobertura.xml" -targetdir:$(Build.SourcesDirectory)/CodeCoverage -reporttypes:HtmlInline_AzurePipelines
  displayName: 'Create code coverage report'

- task: PublishCodeCoverageResults@1
  displayName: 'Publish code coverage report'
  inputs:
    codeCoverageTool: 'cobertura'
    summaryFileLocation: '$(Build.SourcesDirectory)/**/coverage.cobertura.xml'
    
- task: SonarCloudAnalyze@1
  displayName: "Sonar Cloud Analysis"

